// Generated by gencpp from file ltme_node/QueryHardwareVersion.msg
// DO NOT EDIT!


#ifndef LTME_NODE_MESSAGE_QUERYHARDWAREVERSION_H
#define LTME_NODE_MESSAGE_QUERYHARDWAREVERSION_H

#include <ros/service_traits.h>


#include <ltme_node/QueryHardwareVersionRequest.h>
#include <ltme_node/QueryHardwareVersionResponse.h>


namespace ltme_node
{

struct QueryHardwareVersion
{

typedef QueryHardwareVersionRequest Request;
typedef QueryHardwareVersionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct QueryHardwareVersion
} // namespace ltme_node


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ltme_node::QueryHardwareVersion > {
  static const char* value()
  {
    return "77f2d4a0768554de8b833ceceda9c80a";
  }

  static const char* value(const ::ltme_node::QueryHardwareVersion&) { return value(); }
};

template<>
struct DataType< ::ltme_node::QueryHardwareVersion > {
  static const char* value()
  {
    return "ltme_node/QueryHardwareVersion";
  }

  static const char* value(const ::ltme_node::QueryHardwareVersion&) { return value(); }
};


// service_traits::MD5Sum< ::ltme_node::QueryHardwareVersionRequest> should match
// service_traits::MD5Sum< ::ltme_node::QueryHardwareVersion >
template<>
struct MD5Sum< ::ltme_node::QueryHardwareVersionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ltme_node::QueryHardwareVersion >::value();
  }
  static const char* value(const ::ltme_node::QueryHardwareVersionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ltme_node::QueryHardwareVersionRequest> should match
// service_traits::DataType< ::ltme_node::QueryHardwareVersion >
template<>
struct DataType< ::ltme_node::QueryHardwareVersionRequest>
{
  static const char* value()
  {
    return DataType< ::ltme_node::QueryHardwareVersion >::value();
  }
  static const char* value(const ::ltme_node::QueryHardwareVersionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ltme_node::QueryHardwareVersionResponse> should match
// service_traits::MD5Sum< ::ltme_node::QueryHardwareVersion >
template<>
struct MD5Sum< ::ltme_node::QueryHardwareVersionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ltme_node::QueryHardwareVersion >::value();
  }
  static const char* value(const ::ltme_node::QueryHardwareVersionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ltme_node::QueryHardwareVersionResponse> should match
// service_traits::DataType< ::ltme_node::QueryHardwareVersion >
template<>
struct DataType< ::ltme_node::QueryHardwareVersionResponse>
{
  static const char* value()
  {
    return DataType< ::ltme_node::QueryHardwareVersion >::value();
  }
  static const char* value(const ::ltme_node::QueryHardwareVersionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LTME_NODE_MESSAGE_QUERYHARDWAREVERSION_H
